#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\usepackage{amsmath}
\usepackage{bm}
\usepackage{ctex}

\usepackage{color}
\usepackage{fancyvrb}
\usepackage{CJKutf8}
\usepackage[overlap, CJK]{ruby}
\newenvironment{SChinese}{%
\CJKfamily{gbsn}%
\CJKtilde
\CJKnospace}{}
\newcommand{\cntxt}[1]{\begin{CJK}{UTF8}{}\begin{SChinese}#1\end{SChinese}\end{CJK}}
\newcommand{\VerbBar}{|}
\newcommand{\VERB}{\Verb[commandchars=\\\{\}]}
\DefineVerbatimEnvironment{Highlighting}{Verbatim}{commandchars=\\\{\}}
% Add ',fontsize=\small' for more characters per line
\newenvironment{Shaded}{}{}
\newcommand{\KeywordTok}[1]{\textcolor[rgb]{0.00,0.44,0.13}{\textbf{#1}}}
\newcommand{\DataTypeTok}[1]{\textcolor[rgb]{0.56,0.13,0.00}{#1}}
\newcommand{\DecValTok}[1]{\textcolor[rgb]{0.25,0.63,0.44}{#1}}
\newcommand{\BaseNTok}[1]{\textcolor[rgb]{0.25,0.63,0.44}{#1}}
\newcommand{\FloatTok}[1]{\textcolor[rgb]{0.25,0.63,0.44}{#1}}
\newcommand{\ConstantTok}[1]{\textcolor[rgb]{0.53,0.00,0.00}{#1}}
\newcommand{\CharTok}[1]{\textcolor[rgb]{0.25,0.44,0.63}{#1}}
\newcommand{\SpecialCharTok}[1]{\textcolor[rgb]{0.25,0.44,0.63}{#1}}
\newcommand{\StringTok}[1]{\textcolor[rgb]{0.25,0.44,0.63}{#1}}
\newcommand{\VerbatimStringTok}[1]{\textcolor[rgb]{0.25,0.44,0.63}{#1}}
\newcommand{\SpecialStringTok}[1]{\textcolor[rgb]{0.73,0.40,0.53}{#1}}
\newcommand{\ImportTok}[1]{#1}
\newcommand{\CommentTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textit{#1}}}
\newcommand{\DocumentationTok}[1]{\textcolor[rgb]{0.73,0.13,0.13}{\textit{#1}}}
\newcommand{\AnnotationTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textbf{\textit{#1}}}}
\newcommand{\CommentVarTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textbf{\textit{#1}}}}
\newcommand{\OtherTok}[1]{\textcolor[rgb]{0.00,0.44,0.13}{#1}}
\newcommand{\FunctionTok}[1]{\textcolor[rgb]{0.02,0.16,0.49}{#1}}
\newcommand{\VariableTok}[1]{\textcolor[rgb]{0.10,0.09,0.49}{#1}}
\newcommand{\ControlFlowTok}[1]{\textcolor[rgb]{0.00,0.44,0.13}{\textbf{#1}}}
\newcommand{\OperatorTok}[1]{\textcolor[rgb]{0.40,0.40,0.40}{#1}}
\newcommand{\BuiltInTok}[1]{#1}
\newcommand{\ExtensionTok}[1]{#1}
\newcommand{\PreprocessorTok}[1]{\textcolor[rgb]{0.74,0.48,0.00}{#1}}
\newcommand{\AttributeTok}[1]{\textcolor[rgb]{0.49,0.56,0.16}{#1}}
\newcommand{\RegionMarkerTok}[1]{#1}
\newcommand{\InformationTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textbf{\textit{#1}}}}
\newcommand{\WarningTok}[1]{\textcolor[rgb]{0.38,0.63,0.69}{\textbf{\textit{#1}}}}
\newcommand{\AlertTok}[1]{\textcolor[rgb]{1.00,0.00,0.00}{\textbf{#1}}}
\newcommand{\ErrorTok}[1]{\textcolor[rgb]{1.00,0.00,0.00}{\textbf{#1}}}
\newcommand{\NormalTok}[1]{#1}
% set default figure placement to htbp
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\font_cjk gbsn
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
基于TF-IDF的微博用户画像
\end_layout

\begin_layout Author
Linyang He
\end_layout

\begin_layout Section*
Problem 1
\end_layout

\begin_layout Standard
问题：Python编程实现灰度直方图均衡化算法（不能调用某个算法库里面的函数），并应用该算法在某个图片上，显示对比与原图的差别（提示：显示对比可以用两个图相减后
的结果图，注意调节对比度范围，显示出差别）。 
\end_layout

\begin_layout Standard
解答：
\end_layout

\begin_layout Standard
下面是一张灰度图（三国杀主题）采用算法前后的图片的示意图。
\end_layout

\begin_layout Standard
可以发现，采用算法后，灰度值更均衡，对比度更高。
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename pasted2.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
这是利用算法前的直方图：
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename pasted3.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
利用算法之后的直方图：
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename pasted4.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
可以看到直方图更加的均衡。差异图如图所示：
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename pasted5.png
	scale 70

\end_inset


\end_layout

\begin_layout Section*
Problem 2
\end_layout

\begin_layout Standard
问题：Python编程实现线性插值算法（不能调用某个算法库里面的插值函数）；读出一幅图像，利用线性插值把图片空间分辨率放大或缩小N倍，保存图片。
\end_layout

\begin_layout Standard
解答：我们利用双线性插值法，利用复旦大学子彬院的照片作为样例。放大缩小的图放在了文件夹中。
\end_layout

\begin_layout Section*
Problem 3
\end_layout

\begin_layout Standard
问题：Python编程实现在二维图片上画出等值线/等高线（不能调用某个算法库里面的等值线函数）；应用：输入原始图片（如JPG、PNG格式）和显示等值线数值或数量
参数，输出带有等值线/等高线的图片。备注：这题关注的是等值线的计算，而不是平均分布的多条等高线，作业应该是给出一个图像的灰度值，计算给定值（如C=200或0.5）
的等值线。
\end_layout

\begin_layout Standard
解答：我们采用像素点的灰度值的大小来寻找对应的值，再利用一次线性插值标记出需要寻找的灰度值的坐标。最后利用plot画图标注出，我们以Emma Watson为例子
。
\end_layout

\begin_layout Standard
这是Emma Waston 照片上100灰度值的等高线图：
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename pasted6.png
	scale 40

\end_inset


\end_layout

\begin_layout Section*
Problem 4
\end_layout

\begin_layout Standard
问题: Python编程实现强化边界滤波算法代码（不能调用某个算法库里面的函数）；并应用一张图片上，显示与原图的对比差别。
\end_layout

\begin_layout Standard
解答：我们利用拉普拉斯滤波来实现强化边界滤波算法。效果如图：我们会发现，Emma Watson的轮廓本很好的显示了出来。
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename pasted1.png
	scale 50

\end_inset


\end_layout

\end_body
\end_document
